##########################
# Setup.py Configuration #
##########################
[metadata]
name = term_expando
version = 0.14.10-dev
description = Expansion of lookup tables for controlled terms
long_description = file: README.rst

# URLs associated with the project
url = https://github.com/cmungall/term_expando
download_url = https://github.com/cmungall/term_expando/releases
project_urls =
    Bug Tracker = https://github.com/cmungall/term_expando/issues
    Source Code = https://github.com/cmungall/term_expando
    Documentation = https://term_expando.readthedocs.io

# Author information
author = Chris Mungall
author_email = cjmungall@lbl.gov
maintainer = Chris Mungall
maintainer_email = cjmungall@lbl.gov

# License Information
license = MIT
license_file = LICENSE

# Search tags
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Chemistry
keywords =
    Ontologies
    Indexing

[options]
install_requires =
    click
    requests
    pandas
    ontobio

# Random options
zip_safe = false
include_package_data = True
python_requires = >=3.6

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
indra =
    indra
jupyter =
    jinja2
    ipython
grounding =
    pyobo
neo4j =
    py2neo
docs =
    sphinx
    sphinx-rtd-theme
    sphinx-click
    sphinx-autodoc-typehints

[options.entry_points]
console_scripts =
    expando = term_expando.expando:main
    term_expando = term_expando.expando:main
    ontol_index = term_expando.ontol_index:main
term_expando.importer =
    bel                   = term_expando.io.lines:from_bel_script
    bel.gz                = term_expando.io.lines:from_bel_script_gz
    bel.nodelink.json     = term_expando.io.nodelink:from_nodelink_file
    bel.nodelink.json.gz  = term_expando.io.nodelink:from_nodelink_gz
    bel.cx.json           = term_expando.io.cx:from_cx_file
    bel.cx.json.gz        = term_expando.io.cx:from_cx_gz
    bel.graphdati.json    = term_expando.io.graphdati:from_graphdati_file
    bel.graphdati.json.gz = term_expando.io.graphdati:from_graphdati_gz
    bel.jgif.json         = term_expando.io.jgif:from_jgif_file
    bel.jgif.json.gz      = term_expando.io.jgif:from_jgif_gz
    bel.pickle            = term_expando.io.gpickle:from_pickle
    bel.gpickle           = term_expando.io.gpickle:from_pickle
    bel.pkl               = term_expando.io.gpickle:from_pickle
    indra.json            = term_expando.io.indra:from_indra_statements_json_file

term_expando.exporter =
    bel                   = term_expando.canonicalize:to_bel_script
    bel.gz                = term_expando.canonicalize:to_bel_script_gz
    bel.nodelink.json     = term_expando.io.nodelink:to_nodelink_file
    bel.nodelink.json.gz  = term_expando.io.nodelink:to_nodelink_gz
    bel.cx.json           = term_expando.io.cx:to_cx_file
    bel.cx.json.gz        = term_expando.io.cx:to_cx_gz
    bel.graphdati.json    = term_expando.io.graphdati:to_graphdati_file
    bel.graphdati.json.gz = term_expando.io.graphdati:to_graphdati_gz
    bel.jgif.json         = term_expando.io.jgif:to_jgif_file
    bel.jgif.json.gz      = term_expando.io.jgif:to_jgif_gz
    bel.pickle            = term_expando.io.gpickle:to_pickle
    bel.gpickle           = term_expando.io.gpickle:to_pickle
    bel.pkl               = term_expando.io.gpickle:to_pickle
    indra.json            = term_expando.io.indra:to_indra_statements_json_file
    # No re-import
    bel.unodelink.json    = term_expando.io.umbrella_nodelink:to_umbrella_nodelink_file
    bel.unodelink.json.gz = term_expando.io.umbrella_nodelink:to_umbrella_nodelink_gz
    tsv                   = term_expando.io.tsv.api:to_tsv
    gsea                  = term_expando.io.extras:to_gsea

# Importers for PyKEEN
pykeen.triples.extension_importer =
    # Import BEL script to PyKEEN
    bel               = term_expando.io.pykeen:get_triples_from_bel
    # Import BEL Graph pickle to PyKEEN
    bel.gpickle       = term_expando.io.pykeen:get_triples_from_bel_pickle
    bel.pickle        = term_expando.io.pykeen:get_triples_from_bel_pickle
    bel.pkl           = term_expando.io.pykeen:get_triples_from_bel_pickle
    # Import BEL NodeLink JSON to PyKEEN
    bel.nodelink.json = term_expando.io.pykeen:get_triples_from_bel_nodelink
pykeen.triples.prefix_importer =
    # Import BEL from BEL Commons to PyKEEN
    bel-commons       = term_expando.io.pykeen:get_triples_from_bel_commons

######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = term_expando
omit =
    src/term_expando/__main__.py
    src/term_expando/cli.py
    src/term_expando/io/indra.py
    src/term_expando/io/web.py
    tests/*
    docs/*
    scripts/*

[coverage:paths]
source =
    src/term_expando
    .tox/*/lib/python*/site-packages/term_expando

[coverage:report]
show_missing = True
exclude_lines =
    def __str__
    def __repr__
